name: Deploy to Play Store

on:
  workflow_dispatch:
    inputs:
      track:
        description: 'Play Store track (internal/alpha/beta/production)'
        required: true
        default: 'internal'
        type: choice
        options:
          - internal
          - alpha
          - beta
          - production
      release_type:
        description: 'GitHub Release type'
        required: true
        default: 'prerelease'
        type: choice
        options:
          - prerelease
          - release
  workflow_run:
    workflows: ["gradle-test"]
    types:
      - completed
    branches: [main]

permissions:
  contents: write

jobs:
  deploy:
    name: Build and Deploy AAB
    runs-on: ubuntu-latest
    # Solo ejecutar si el workflow de tests fue exitoso o si es manual
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Load Google Service file
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 -di > app/google-services.json

      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo $KEYSTORE_BASE64 | base64 -di > app/release-keystore.jks

      - name: Extract version from build.gradle.kts
        id: version
        run: |
          VERSION_NAME=$(grep 'versionName = ' app/build.gradle.kts | sed 's/.*versionName = "\(.*\)"/\1/')
          VERSION_CODE=$(grep 'versionCode = ' app/build.gradle.kts | sed 's/.*versionCode = \(.*\)/\1/')
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
          echo "Version: $VERSION_NAME ($VERSION_CODE)"

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Build Release AAB
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=${{ github.workspace }}/app/release-keystore.jks \
            -Pandroid.injected.signing.store.password=$SIGNING_STORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$SIGNING_KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$SIGNING_KEY_PASSWORD

      - name: Upload AAB to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: com.gago.weatherapp
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: ${{ github.event.inputs.track || 'internal' }}
          status: draft
          inAppUpdatePriority: 2
          mappingFile: app/build/outputs/mapping/release/mapping.txt

      - name: Determine release tag and type
        id: release_info
        run: |
          VERSION_NAME=${{ steps.version.outputs.version_name }}
          TRACK=${{ github.event.inputs.track || 'internal' }}
          RELEASE_TYPE=${{ github.event.inputs.release_type || 'prerelease' }}
          
          # Determinar el tag segÃºn el track
          if [ "$TRACK" == "production" ]; then
            TAG="v$VERSION_NAME"
            PRERELEASE="false"
            if [ "$RELEASE_TYPE" == "prerelease" ]; then
              PRERELEASE="true"
            fi
          elif [ "$TRACK" == "beta" ]; then
            TAG="v$VERSION_NAME-beta"
            PRERELEASE="true"
          elif [ "$TRACK" == "alpha" ]; then
            TAG="v$VERSION_NAME-alpha"
            PRERELEASE="true"
          else
            TAG="v$VERSION_NAME-internal"
            PRERELEASE="true"
          fi
          
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "prerelease=$PRERELEASE" >> $GITHUB_OUTPUT
          echo "Release tag: $TAG (prerelease: $PRERELEASE)"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release_info.outputs.tag }}
          name: Release ${{ steps.release_info.outputs.tag }}
          body: |
            ## WeatherApp ${{ steps.version.outputs.version_name }}
            
            **Version Code:** ${{ steps.version.outputs.version_code }}
            **Play Store Track:** ${{ github.event.inputs.track || 'internal' }}
            **Status:** Draft (not published yet)
            
            ### Changes
            - App bundle uploaded to Google Play Store
            - Ready for manual release from Play Console
            
            ### Download
            The AAB file has been uploaded to Google Play Store Console.
          files: |
            app/build/outputs/bundle/release/app-release.aab
            app/build/outputs/mapping/release/mapping.txt
          prerelease: ${{ steps.release_info.outputs.prerelease }}
          draft: false
          generate_release_notes: true

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: app/build/outputs/bundle/release/app-release.aab
          retention-days: 30

      - name: Upload Mapping file
        uses: actions/upload-artifact@v4
        with:
          name: mapping-file
          path: app/build/outputs/mapping/release/mapping.txt
          retention-days: 90
